==36590== Memcheck, a memory error detector
==36590== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==36590== Using Valgrind-3.11.0.SVN and LibVEX; rerun with -h for copyright info
==36590== Command: ./TestCollatz
==36590== 
Running main() from gtest_main.cc
[==========] Running 10 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 10 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (48 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (12 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (4 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (4 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (4 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (4 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (17 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (4 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (43 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (75 ms)
[----------] 10 tests from CollatzFixture (235 ms total)

[----------] Global test environment tear-down
[==========] 10 tests from 1 test case ran. (283 ms total)
[  PASSED  ] 10 tests.
==36590== 
==36590== HEAP SUMMARY:
==36590==     in use at exit: 38,844 bytes in 425 blocks
==36590==   total heap usage: 804 allocs, 379 frees, 211,980 bytes allocated
==36590== 
==36590== LEAK SUMMARY:
==36590==    definitely lost: 0 bytes in 0 blocks
==36590==    indirectly lost: 0 bytes in 0 blocks
==36590==      possibly lost: 0 bytes in 0 blocks
==36590==    still reachable: 4,096 bytes in 1 blocks
==36590==         suppressed: 34,748 bytes in 424 blocks
==36590== Rerun with --leak-check=full to see details of leaked memory
==36590== 
==36590== For counts of detected and suppressed errors, rerun with: -v
==36590== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 35
Branches executed:100.00% of 36
Taken at least once:66.67% of 36
No calls
Collatz.c++:creating 'Collatz.c++.gcov'
File 'TestCollatz.c++'
Lines executed:100.00% of 35
Branches executed:58.49% of 212
Taken at least once:28.30% of 212
No calls
TestCollatz.c++:creating 'TestCollatz.c++.gcov'
